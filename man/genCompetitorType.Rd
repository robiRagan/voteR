% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genCompetitorType.R
\name{genCompetitorType}
\alias{genCompetitorType}
\title{genCompetitorType
Assigns each competitor a type based upon parameters provided by the user.}
\usage{
genCompetitorType(numCompetitorsGenCompType, allHunterGenCompType = FALSE,
  probabilityHunterGenCompType = 1, probabilityAggregatorGenCompType = 0,
  probabilityPredatorGenCompType = 0)
}
\arguments{
\item{numCompetitorsGenCompType}{scalar Number of voters}

\item{allHunterGenCompType}{logical If If FALSE (the default) then the distribution of competitor types is determined by the other parameters in this function. If TRUE then all agents will be of the Humter type and will seek votes by first miving at random. If the move increaes vote share then they continue to move in that directon. If the vote share stays the same or decreases then the competitor randomly selects a move that is between 90 and 270 degrees from the direction of their previous move.}

\item{probabilityHunterGenCompType}{scalar [0,1] The probability that any given competitor will have the Hunter type.}

\item{probabilityAggregatorGenCompType}{scalar [0,1] The probability that any given competitor will have the Aggregator type.}

\item{probabilityPredatorGenCompType}{scalar [0,1] The probability that any given competitor will have the Predator type.}
}
\value{
outCompetitorType numCompetitors x 1 A vector of competitor types, one for each competitor.
}
\description{
Randomly type all competitors in the supoplied dataframe. \code{\link{genCompetitorType}} is used in conjuction 
with \code{\link{genIdeals}} by \code{\link{genCompetitors}} to generate
the characteristics of eac competitor.
}
